{"version":3,"sources":["hooks/useValueRef.js","ui/Camera.js","ui/CameraPermissionWall.js","ui/CameraSelector.js","App.js","reportWebVitals.js","index.js"],"names":["useValueRef","value","ref","useRef","current","Camera","className","deviceId","onQRCodeRef","onQRCode","videoRef","useState","hints","Map","set","DecodeHintType","POSSIBLE_FORMATS","BarcodeFormat","QR_CODE","BrowserMultiFormatReader","reader","useEffect","abortController","AbortController","stopContinuousDecode","a","navigator","mediaDevices","getUserMedia","video","mediaStream","signal","aborted","srcObject","addEventListener","target","play","once","abort","decodeFromVideoElementContinuously","event","imageSource","qrCode","getText","classNames","CameraPermissionWall","children","permitted","setPermitted","enumerateDevices","devices","videoInputPlaceholderDevice","find","kind","label","CameraSelector","onChange","onChangeRef","setDevices","handleChange","useCallback","videoInputDevices","filter","map","HYPERLINK_PATTERN","App","cameraDeviceId","setCameraDeviceId","setQRCode","started","setStarted","canvasRef","handleClick","handleQRCode","getVideoTracks","getSettings","height","width","canvas","setAttribute","getContext","drawImage","handleQRCodeClose","hidden","test","href","rel","onClick","type","autoFocus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49ad554a.chunk.js","sourcesContent":["import { useRef } from 'react';\n\nexport default function useValueRef(value) {\n  const ref = useRef();\n\n  ref.current = value;\n\n  return ref;\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { BarcodeFormat, BrowserMultiFormatReader, DecodeHintType } from '@zxing/library';\nimport classNames from 'classnames';\n\nimport './Camera.css';\nimport useValueRef from '../hooks/useValueRef';\n\nconst Camera = ({ className, deviceId, onQRCode }) => {\n  const onQRCodeRef = useValueRef(onQRCode);\n  const videoRef = useRef();\n\n  const [reader] = useState(() => {\n    const hints = new Map();\n\n    hints.set(DecodeHintType.POSSIBLE_FORMATS, [BarcodeFormat.QR_CODE]);\n\n    return new BrowserMultiFormatReader(hints);\n  });\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    reader.stopContinuousDecode();\n\n    (async function () {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({ video: deviceId ? { deviceId } : true });\n\n      if (abortController.signal.aborted) {\n        return;\n      }\n\n      videoRef.current.srcObject = mediaStream;\n\n      videoRef.current.addEventListener(\n        'loadedmetadata',\n        ({ target }) => {\n          abortController.signal.aborted || target.play();\n        },\n        { once: true }\n      );\n    })();\n\n    return () => {\n      reader.stopContinuousDecode();\n      abortController.abort();\n    };\n  }, [deviceId, onQRCodeRef, reader]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    reader.decodeFromVideoElementContinuously(videoRef.current, event => {\n      if (abortController.signal.aborted || !event) {\n        return;\n      }\n\n      onQRCodeRef.current?.({ imageSource: videoRef.current, qrCode: event?.getText() });\n    });\n\n    videoRef.current?.play();\n\n    return () => {\n      reader.stopContinuousDecode();\n      abortController.abort();\n    };\n  }, [onQRCodeRef, reader, videoRef]);\n\n  return (\n    <div className={classNames('camera', className)}>\n      <video className=\"camera__video\" ref={videoRef} />\n    </div>\n  );\n};\n\nexport default Camera;\n","import { useEffect, useState } from 'react';\n\nimport './CameraPermissionWall.css';\n\nconst CameraPermissionWall = ({ children }) => {\n  const [permitted, setPermitted] = useState();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    (async function () {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n\n      if (abortController.signal.aborted) {\n        return;\n      }\n\n      const videoInputPlaceholderDevice = devices.find(({ kind, label }) => kind === 'videoinput' && !label);\n\n      if (videoInputPlaceholderDevice) {\n        setPermitted(false);\n\n        await navigator.mediaDevices.getUserMedia({ video: { deviceId: videoInputPlaceholderDevice.deviceId } });\n\n        if (abortController.signal.aborted) {\n          return;\n        }\n      }\n\n      setPermitted(true);\n    })();\n\n    return () => abortController.abort();\n  }, [setPermitted]);\n\n  return typeof permitted !== 'boolean' ? (\n    <div className=\"camera-permission-wall camera-permission-wall--checking\">Checking camera access&hellip;</div>\n  ) : permitted ? (\n    children\n  ) : (\n    <div className=\"camera-permission-wall camera-permission-wall--asking\">Please allow camera access to continue.</div>\n  );\n};\n\nexport default CameraPermissionWall;\n","import { useCallback, useEffect, useState } from 'react';\n\nimport useValueRef from '../hooks/useValueRef';\n\nconst CameraSelector = ({ className, onChange, value }) => {\n  const onChangeRef = useValueRef(onChange);\n  const [devices, setDevices] = useState([]);\n\n  const handleChange = useCallback(\n    ({ target: { value } }) => {\n      onChangeRef.current?.(value);\n    },\n    [onChangeRef]\n  );\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    (async function () {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n\n      if (abortController.signal.aborted) {\n        return;\n      }\n\n      const videoInputDevices = devices.filter(({ kind }) => kind === 'videoinput');\n\n      setDevices(videoInputDevices);\n      onChangeRef.current?.(videoInputDevices[0]?.deviceId);\n    })();\n\n    return () => abortController.abort();\n  }, [onChangeRef, setDevices]);\n\n  return (\n    <select className={className} onChange={handleChange} value={value}>\n      {devices.map(({ deviceId, label }) => (\n        <option key={deviceId} value={deviceId}>\n          {label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default CameraSelector;\n","import { Fragment, useCallback, useRef, useState } from 'react';\nimport classNames from 'classnames';\n\nimport './App.css';\nimport Camera from './ui/Camera';\nimport CameraPermissionWall from './ui/CameraPermissionWall';\nimport CameraSelector from './ui/CameraSelector';\n\nconst HYPERLINK_PATTERN = /^https?:\\/\\//u;\n\nconst App = () => {\n  const [cameraDeviceId, setCameraDeviceId] = useState();\n  const [qrCode, setQRCode] = useState();\n  const [started, setStarted] = useState();\n  const canvasRef = useRef();\n\n  const handleClick = useCallback(() => {\n    setStarted(true);\n  }, [setStarted]);\n\n  const handleQRCode = useCallback(\n    ({ imageSource, qrCode }) => {\n      if (qrCode) {\n        const { height, width } = imageSource.srcObject.getVideoTracks()[0].getSettings();\n        const { current: canvas } = canvasRef;\n\n        if (canvas) {\n          canvas.setAttribute('height', height);\n          canvas.setAttribute('width', width);\n          canvas.getContext('2d')?.drawImage(imageSource, 0, 0);\n        }\n\n        setQRCode(qrCode);\n      }\n    },\n    [setQRCode]\n  );\n\n  const handleQRCodeClose = useCallback(() => {\n    setQRCode('');\n  }, [setQRCode]);\n\n  return (\n    <div className=\"app\">\n      <CameraPermissionWall>\n        {started ? (\n          <Fragment>\n            <Camera\n              className={classNames({ 'app__camera-blur': qrCode })}\n              deviceId={cameraDeviceId}\n              onQRCode={handleQRCode}\n            />\n            <canvas className=\"app__qr-code-snapshot\" hidden={!qrCode} ref={canvasRef} />\n            {!!qrCode && (\n              <Fragment>\n                <div className=\"app__qr-code-box\">\n                  <div className=\"app__qr-code-body\">\n                    {HYPERLINK_PATTERN.test(qrCode) ? (\n                      <a\n                        className=\"app__qr-code app__qr-code--link\"\n                        href={qrCode}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        {qrCode}\n                      </a>\n                    ) : (\n                      <span className=\"app__qr-code\">{qrCode}</span>\n                    )}\n                  </div>\n                </div>\n                <button className=\"app__qr-code-close-button\" onClick={handleQRCodeClose} type=\"button\">\n                  &times;\n                </button>\n              </Fragment>\n            )}\n          </Fragment>\n        ) : (\n          <div>\n            <CameraSelector onChange={setCameraDeviceId} value={cameraDeviceId} />\n            <button autoFocus={true} onClick={handleClick} type=\"button\">\n              Click here to start\n            </button>\n          </div>\n        )}\n      </CameraPermissionWall>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}